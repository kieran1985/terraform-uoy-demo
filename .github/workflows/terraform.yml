name: terraform
on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write # required for OIDC
  contents: read # required for actions/checkout
  pull-requests: write # required to write pull requests

jobs:
  terraform:
    name: terraform install, init, plan, comment, apply
    runs-on: ubuntu-latest

    env:
      TF_LOG: INFO
      TF_IN_AUTOMATION: true

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_NUMBER}}:role/github-actions-terraform-uoy
          role-session-name: GitHubActions
          aws-region: eu-west-2

      - name: verify authentication
        run: aws sts get-caller-identity

      - name: terraform install
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: terraform format
        run: terraform fmt -check

      - name: terraform init
        run: terraform init

      - name: terraform validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        if: github.event_name == 'pull_request'
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
